/* Подключаем стили     <link rel="stylesheet" href="./style.css"> по ссылке в head. ***Начинать путь нужно с  ./ - означает текущую
директорию(один уровень с index.html) так гарантируется работа с любой длинной вложенности на сервере.

 коментарии в css также как многострочные комментарии в JS /звездочка  комментарий  звездочка/

В css файле по нажатию контрол+пробел показывается палитра цветов.

Обращаться можно по 1)тегу 
body {
    background-color: rgba(116, 100, 131, 0.486);
}
h1 {
    color: darkmagenta;
}

по 2)классу. Название класса не может начинатся с цифры
.red {
    color: red;
    text-decoration: overline;
}

по 3) id, по 4) аттрибуту

color -  цвет элемента
text-decoration: underline; - подчеркивание текста
background-color: rgba  - цвет бекграунда 

margin - внешние отступы
body {
    margin: 0; - сделали что бы  блок div прилягал полностью к краям браузера(не было зазоров между ними) 


width - ширина блока, 100% - полная ширина потому что лежит в блоке body
Если поставить   height 100% то он будет занимать высоту от контента в нем, а для того что бы на весь body его растянуть нужно установить 100vh - view height - это высота всего окна которое есть в середине браузера
.header { 
    width: 100%;
    height: 100vh;
    background-color: darksalmon;

Для того что бы удобно было выравнивать текст в блоке нужно объявить блок flex боксом. Это делает в css в блоке который будет флексом     display: flex;  По умолчанию в флекс бокс модели все элементы выстраиваются в ряд(строку). Прописываем     flex-direction: column; для постановки элементов в столбец( по умолчанию было row).*** Обычно все флекс
параметры прописывают вначале блока.

выравнивание происходит по осям     justify-content: center; - вертикальная относительно колонки 
align-items: center; - горизонтальная относительно колонки

По Figma смотрим макет верстки. Текст используется 1 Монсерат с разным начертанием, нужно его подключить через сервис google font shttps://fonts.google.com. Находим там этот шрифт, заходим в него и выбираем какие начертания нужно подключить. В данном случае regular, bold, semibold и копируем ссылку которая появилась в окне справа в index.html после ссылки на css вставляем. Что бы к нему обращаться в ксс файле с сайта копируем CSS rules to specify families - font-family: 'Montserrat', sans-serif; и вставляем эту инструкцию в свойства body. Эта инструкция говорит что все недписи внутри тега боди и вложенные в него будут наследовать этот шрифт, а через запятую указан санс-сериф - прямой шрифт без засечек. Если наш шрифт не подгрузится у пользователя, то будет использован другой шрифт сенс-сериф который доступен пользователю.

Из фигмы выделив нужный элемент можно выбрать справа со вкладки code ксс параметры и вставить их в нужный блок ксс файла.
        position: absolute;
        width: 581px;
        height: 73px;
        left: 430px;
        top: 327px;

        font-family: Montserrat;
        font-style: normal;
        font-weight: bold;
        font-size: 56px;
        line-height: 130%;
         //identical to box height, or 73px 

        text-align: center;

        color: #FFFFFF;
 Но не все эти параметры нам нужны, поэтому нужно некоторые удалить. Блок с позицией пока удаляем, так как у нас позиционирование уже есть. Удаляем фонт фемили
 потому что у нас уже в боди он прописан для всех элементов. Удаляем фонт-стайл - это начертание прямого текста. По умолчанию и так ставится прямое начертание (курсив-italic).
Фонт вейт - переводим в числовое значение. Когда выбирали начертание шрифта на гугл сайте регуляр = 400, семиболд = 600, болд = 700.
Line-height - высота строки. 130% аналогично множителю 1.3
text-align: center - выравнивание текста по центру.

Также копируем и удалям ненужное для хедэр-сабтайтл
     font-weight: bold;
    font-size: 16px;
    line-height: 150%;
    
    text-align: center;
    letter-spacing: 0.2em;   - расстояние между буквами(разреженность текста)
    text-transform: uppercase; - текст в верхнем регистре
    
    color: #FFFFFF;

Теперь изменим отступы между элементами тайтл и сабтайтл, для этого нам нужно изменить цвет бекграунда.
Изменим цвет бекграунда на похожий с макета. Для этого выберем белый текст, клацнем на цвет, там выберем пипетку и получим цвет фона клацнув ей на цвет на макете, потом
вернем тексту белый цвет, а полученный вставим в ксс файл. Откроем панель разработчика на вкладке элементс. При наведении на элемент, он выделяется и оранжевым цветом
показываются отступы, которые даны по умолчанию, нам нужно поставить свои отступы. Это внешние отступы поэтому для хедер-тайтл и хедер-сабтайтл прописываем margin: 0; обнуляя
отступы со всех сторон.
В фигме выбираем первый элемент и зажав альт наводит на нижний элемент - выскакивает подсказка - 25 это расстояние между ними. Теперь после margin можно дописать в хедер-тайтле
отступ вниз 25px. margin-bottom: 25px;

Теперь экспортируем фон. Выбираем в фигме фон, и в правой панеле выбираем экспорт. Файл у нас большой и в нем не нужна прозрачность, поэтому будем экспортировать в JPG. Если
нужна прозрачность(обычно для небольших иконок) экспортируем в PNG. В папке с проектом создаем папку img а в ней папку header и помещаем туда изображение. После background-color
что бы цвет его не перекрывал прописываем background-image: url("./../img/header/header-bg-default.jpg"); - путь считается относительно ксс файла. ./ - текущая директория,
потом ../ - две точки выход на уровень вверх. 

Применилось изображение оно дублируется, а не растянулось на весь блок. Нам нужно прописать background-size: cover; background-size: - размер фон. изображ.
cover - полностью заполнит блок в котором размещено, так что бы сохранить масштабирование и не допустить пустых областей.
Можно сделать что б наверняка не было видно пустых областей дописав ниже background-repeat: no-repeat; - отменяем дублирование, background-position: center; - позиция в центре.

Теперь экспортируем стрелочку, это векторная фигура, поэтому экспортируем ее как svg формат. СВГ мы можем подключить как картинку, а можем через код. Сейчас подключим как
картинку, для этого делаем новый блок <div class="header-arrow"></div>. В макете фигмы видим размер общей области 48 на 48. Прописываем эти размеры width: 48px;
height: 48px; также прописываем  background-color: red; для видимости этого блока. теперь нам нужно его разместить внизу блока по центру абсолютным позиционированием.

Изначально элементы размещаются статически или по модели флексбокса. Но если нужно выдернуть элемент из общей структуры нужно использовать абсолютное позиционирование.
Прописываем position: absolute; - теперь эл. перекрыл элементы с текстом. Теперь он размещается относительно родителя которым является боди. Но мы можем принудительно
установить ему родителя, для этого какому то диву в котором находится этот элемент нужно прописать position relative, тогда уже этот див будет его родителем для 
абсолютного позиционирования. Прописываем для хэдера. Теперь допустим для размещения в правом верхнем углу элемента хедер элемента арров в его блоке прописываем
top - 0, right- 0.
Для расположения внизу по центру прописываем   bottom: 0px;   left: 50%; Но блок будет не совсем по центру, потому что считается расстояние от левой границы экрана до
левой границы элемента. Можно использовать трюк пододвинув элемент влево на половину его ширины - 24 пикселя. Что бы пододвинуть влево используем отступ слева
с отрицательным значением  margin-left: -24px; но размещение будет завязано на ширине элемента, и если ширина изменится то нужно будет менять и параметр.
Так что прописываем вместо него transform: translate(-50%, 0); - он принимает 2 значения 1) смещение по х, 2) смещение по у. По у нам не нужно смещать поэтому пишем 0.

Теперь поместив в элемент стрелочку. Это можно сделать прописав ее через фон(бекграунд), через тег img в индексе, можем передать напрямую код свг иконки.
Размещаем в индексе через тег img  <img src="./img/header/chevron-down.svg" alt="Arrow"> - путь к картинке, альт - описание картинки. Теперь убираем красный фон.
Отступ от низа блока хедер до блока со стрелкой 30 пикселей,





















*/